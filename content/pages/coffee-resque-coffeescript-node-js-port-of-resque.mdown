Date: 2010-10-26 16:54:29 GMT
tumblr_id: 1407662872
categories: github,coffeescript,node.js,resque
github_repo: technoweenie/coffee-resque
title: coffee-resque: Coffeescript/Node.js port of Resque

# coffee-resque: Coffeescript/Node.js port of Resque

<a href="http://twitter.com/technoweenie/status/28786934708"><img src="http://f.cl.ly/items/0f55a58502182321c08f/technoweenie-status-28786934708.png" /></a>

It seems that constraints, among other things, helped [Rick Olson](http://github.com/technoweenie) (aka [technoweenie](http://twitter.com/technoweenie)) get this [Coffeescript](http://thechangelog.com/search/Coffeescript)/[Node.js](http://thechangelog.com/search/Node.js) port of [Resque](http://thechangelog.com/search/Resque) ready for the initial release he open sourced yesterday (Monday - October 25, 2010).

First, you'll want to queue some jobs in your app:

    var resque = require('resque').connect({
      host: redisHost, port: redisPort});
    resque.enqueue('math', 'add', [1,2])

Next, you'll want to setup a worker to handle these jobs.

    // implement your job functions
    var myJobs = {
      add: function(a, b) { a + b }
    }

    // setup a worker
    var worker = require('resque').worker('*', {
      host: redisHost, port: redisPort,
      callbacks: myJobs})

    // some global event listeners
    //
    // Triggered every time the Worker polls.
    worker.on('poll', function(worker, queue) {})

    // Triggered before a Job is attempted.
    worker.on('job', function(worker, queue, job) {})

    // Triggered every time a Job errors.
    worker.on('error', function(err, worker, queue, job) {})

    // Triggered on every successful Job run.
    worker.on('success', function(worker, queue, job) {})

    worker.start()

[Rick](http://github.com/technoweenie) also notes that generic failure handling and better polling are on his todo list.

### Check out the codes

[[Source on GitHub](http://github.com/technoweenie/coffee-resque)] [[Documentation](http://github.com/technoweenie/coffee-resque#readme)]
