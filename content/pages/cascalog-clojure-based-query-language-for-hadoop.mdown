Date: 2010-04-17 01:32:19 GMT
tumblr_id: 526999413
categories: github,hadoop,clojure,data,query
github_repo: nathanmarz/cascalog
title: Cascalog - Clojure-based query language for Hadoop

# Cascalog - Clojure-based query language for Hadoop

Whilst at [Chirp](http://chirp.twitter.com), Wynn interviewed [Mike Montano](http://twitter.com/michaelmontano) from [BackType](http://backtype.com) (for a new API-focused podcast we're launching next week) and he told us about [Cascalog](http://github.com/nathanmarz/cascalog) a new Clojure-based query language for Hadoop.

Inspired by [Datalog](http://en.wikipedia.org/wiki/Datalog), Cascalog is a DSL in Clojure that lets the BackType team query their massive amounts of data. Since we don't pretend to be Clojure or Hadoop nerds, I'll let [creator Nathan Marz' blog post](http://nathanmarz.com/blog/introducing-cascalog/) lay out the feature set:

* Simple – Functions, filters, and aggregators all use the same syntax. Joins are implicit and natural.
* Expressive – Logical composition is very powerful, and you can run arbitrary Clojure code in your query with little effort.
* Interactive – Run queries from the Clojure REPL.
* Scalable – Cascalog queries run as a series of MapReduce jobs.
* Query anything – Query HDFS data, database data, and/or local data by making use of Cascading’s “Tap” abstraction
* Careful handling of null values – Null values can make life difficult. Cascalog has a feature called “non-nullable variables” that makes dealing with nulls painless.
* First class interoperability with Cascading – Operations defined for Cascalog can be used in a Cascading flow and vice-versa
* First class interoperability with Clojure - Can use regular Clojure functions as operations or filters, and since Cascalog is a Clojure DSL, you can use it in other Clojure code.

If you _are_ a Hadoop or Clojure nerd, let us know about cool projects using either, or both!

Also, this is the first Changelog post from 30,000 feet. Go go @[gogoinflight](http://twitter.com/gogoinflight)!

[[Source on GitHub](http://github.com/nathanmarz/cascalog)] [[Blog post](http://nathanmarz.com/blog/introducing-cascalog/)]
