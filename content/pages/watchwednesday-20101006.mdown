Date: 2010-10-06 19:29:38 GMT
tumblr_id: 1257104170
categories: WatchWednesday,ww,ruby,javascript,node.js,scala,shell,osx,growl,cli,canvas
title: WatchWednesday for 20101006

# WatchWednesday for 20101006


Another [WatchWednesday](http://thechangelog.com/post/1167855730/watchwednesday-20100922), is upon us.  Here's a quick list of projects you might have missed or you should watch.

#### [Commander](http://github.com/visionmedia/commander)

[TJ Holowaychuk](http://github.com/visionmedia)'s latest projects seem to have a Node.js flavor, but TJ has released a [ton of Ruby projects](http://github.com/visionmedia), too. [Commander](http://github.com/visionmedia/commander) is a robust API for creating Ruby command line applications. Commander sits atop OptionParser, HighLine and other libraries you probably already use. It also supports formatters as well as text-to-speech and Growl support on MacOS. It even has support for nice looking terminal tables via TJ's [terminal-table](http://github.com/visionmedia/terminal-table) gem:

    +----------+-------+----+--------+-----------------------+
    | Terminal | Table | Is | Wicked | Awesome               |
    +----------+-------+----+--------+-----------------------+
    |          |       |    |        | get it while its hot! |
    +----------+-------+----+--------+-----------------------+




#### [Eyeballs.js](http://github.com/paulca/eyeballs.js)

[Eyeballs](http://github.com/paulca/eyeballs.js) from [Paul Campbell](http://github.com/paulca) is a lightweight JavaScript MVC framework that sits on top of jQuery or Prototype that provides features such as hash-based URL routing, data models, and local storage. A humorous feature of Eyeballs is the syntax and the 'eep eep' function:

    // declare a model
    o_O('Post', function(post){
      post.validates_presence_of('title')
    })

You gotta love that. o_O

#### [Screeninator](http://github.com/jondruse/screeninator)

Inspired by Arthur Chiu's wildly popular [terminitor](http://thechangelog.com/post/1121940971/terminitor-automate-your-workflow), [Jon Druse](http://github.com/jondruse/screeninator)'s [Screeninator](http://github.com/jondruse/screeninator) orchestrates your `screen` sessions.

    # ~/.screeninator/project_name.yml
    # you can make as many tabs as you wish...

    escape: ``
    project_name: Screeninator
    project_root: ~/code/rails_project
    tabs:
      - shell: git pull
      - database: rails db
      - console: rails c
      - logs: 
        - cd logs
        - tail -f development.log
      - ssh: ssh me@myhost

#### [Scalatra](http://github.com/scalatra/scalatra)

[Scalatra](http://github.com/scalatra/scalatra) is a Scala port of [everyone's favorite Ruby microframework](http://www.sinatrarb.com/).

    package org.scalatra

    class ScalatraExample extends ScalatraServlet {

      // send a text/html content type back each time
      before {
        contentType = "text/html"
      }

      // parse matching requests, saving things prefixed with ':' as params
      get("/date/:year/:month/:day") {
        <ul>
          <li>Year: {params("year")}</li>
          <li>Month: {params("month")}</li>
          <li>Day: {params("day")}</li>
        </ul>
      }

      // produce a simple HTML form
      get("/form") {
        <form action='/post' method='POST'>
          Post something: <input name='submission' type='text'/>
          <input type='submit'/>
        </form>
      }
      
      ...

#### [Fabric.js](http://github.com/kangax/fabric.js)

One of the cool things about SVG is the DOM API. [Fabric.js](http://github.com/kangax/fabric.js) from [Juriy Zaytsev](http://github.com/kangax) provides an _interactive object model_ on top of the HTML5 `<canvas>` element.
  
    <canvas id="canvas" width="300" height="300"></canvas>  
    ...

    var canvas = new fabric.Element('canvas');

    var rect = new fabric.Rect({
      top: 100,
      left: 100,
      width: 60,
      height: 70,
      fill: 'red'
    });

    canvas.add(rect);

Be sure and check out the extensive [Fabric.js demo and sandbox](http://kangax.github.com/fabric.js/test/demo/).
